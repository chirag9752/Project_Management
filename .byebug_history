exit
params.require(:project).permit(:project_name, :billing_rate, :user_id)
Project.build(project_params)
 Project.build(project_params)
project_params
exit
params[:featureknown][:feature_name]
exit
@feature_name
exit
@feature_name
exit
exig
@feature_name
exit
UserFeature.exists?(user_id: user.id, feature_id: Feature.find_by(feature_name: feature_name.feature_name).id);
Feature.find_by(feature_name: feature_name.feature_name).id
feature.id
user.id
user
exit
UserFeature.exists?(user_id: user.id, feature_id: feature.id)
user.id
Feature.find_by(feature_name: feature_name.feature_name).id
Feature.find_by(feature_name: feature_name.feature_name)
feature
UserFeature.exists?(user_id: user.id, feature_id: feature.id)
Feature.find_by(feature_name: feature_name.feature_name)
next
nect
prev
feature_name.feature_name
feature_name
 Feature.find_by(feature_name: feature_name)
next
 Feature.find_by(feature_name: feature_name)
feature = Feature.find_by(feature_name: feature_name)
exit
Feature.find_by(feature_name: feature_name)
FeatureAccessService.has_access?(@user, @feature_name)
exit
feature = Feature.find_by(feature_name: feature_name)
FeatureAccessService.has_access?(@user, feature_name)
exit
Feature.find_by(feature_name: params[:featureknown][:feature_name])
Feature.find_by(params[:featureknown][:feature_name])
params[:featureknown][:feature_name]
exit
params[:featureknown][:feature_name]
exit
params[:project][:feature_name];
params[:project]
params.require(:project)
params[:feature_name]
params.require(:project).permit(:feature_name)
Feature.find_by(params.require(:project).permit(:feature_name))
params
exit
token
